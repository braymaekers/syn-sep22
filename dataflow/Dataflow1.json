{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "u2u-syn-ws-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Trip ID} as integer,",
				"          Duration as short,",
				"          {Start Date} as timestamp 'MM/dd/yyyy HH:mm',",
				"          {Start Station} as string,",
				"          {Start Terminal} as short,",
				"          {End Date} as timestamp 'MM/dd/yyyy HH:mm',",
				"          {End Station} as string,",
				"          {End Terminal} as short,",
				"          {Bike #} as short,",
				"          {Subscriber Type} as string,",
				"          {Zip Code} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'babs',",
				"     folderPath: 'source',",
				"     fileName: '201508_trip_data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 aggregate(groupBy({Start Station}),",
				"     trip_count = count({Trip ID}),",
				"          avg_duration = avg(Duration)) ~> aggregate1",
				"source1 aggregate(groupBy({End Station}),",
				"     trip_count = count({Trip ID}),",
				"          avg_duration = avg(Duration)) ~> aggregate2",
				"aggregate1, aggregate2 join({Start Station} == {End Station},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          StationName = {Start Station},",
				"          TripsStarted = aggregate1@trip_count,",
				"          StartedAvgDuration = aggregate1@avg_duration,",
				"          TripsEnded = aggregate2@trip_count,",
				"          EndedAvgDuration = aggregate2@avg_duration",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datalake',",
				"     folderPath: 'CURATED',",
				"     compressionCodec: 'snappy',",
				"     filePattern:'trip_summary',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}